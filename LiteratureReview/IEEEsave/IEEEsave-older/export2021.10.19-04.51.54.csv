"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"Components of Typical Undergraduate Software Engineering Courses: Results from a Survey","L. M. Leventhal; B. T. Mynatt","Department of Computer Science, Bowling Green State University; NA","IEEE Transactions on Software Engineering","18 Sep 2006","1987","SE-13","11","1193","1198","A survey of undergraduate software engineering courses was conducted. The survey covered the issues of course level, course content, course organization, project characteristics, and department demographics. The descriptive statistics show that the typical course focuses on the software development life cycle and includes a project intended for actual use. The project is carried out by teams of students, with student leaders. A factor analysis disclosed that three different sorts of courses are currently being offered. The most predominant course is the Later-Life Cycle course, which focuses on the later stages of the software life cycle. Detailed design, coding, testing, and maintenance receive in-depth coverage in this style of course, and the student's grades are heavily dependent upon the project. The Early-Life-Cycle course emphasizes requirements analysis, specification, and system design. Written reports are an important component of this course, and the project is again a large portion of the students' grades. The third style of course is the Theoretical-Issues course. Software metrics, project management, and legal and ethical issues are covered. The students are upper level, and they use journal articles as a source of materials. The issues of suitable textbooks and sources of materials and training for teaching user-interface design surfaced as problem areas.","1939-3520","","10.1109/TSE.1987.232869","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1702167","Projects;software engineering;software life cycle;survey;undergraduate courses","Software engineering;Demography;Statistics;Programming;Testing;System analysis and design;Software metrics;Project management;Law;Legal factors","","Projects;software engineering;software life cycle;survey;undergraduate courses","","7","","17","","18 Sep 2006","","","IEEE","IEEE Journals"
